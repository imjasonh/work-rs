name: Preview Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  CARGO_TERM_COLOR: always

jobs:
  preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@4305c38b25d97ef35a8ad1f985ccf2d2242004f2 # stable
      with:
        targets: wasm32-unknown-unknown

    - name: Deploy Preview to Cloudflare Workers
      id: deploy
      uses: cloudflare/wrangler-action@da0e0dfe58b7a431659754fdf3f186c529afbe65 # v3.14.1
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        command: deploy --name work-rs-preview-${{ github.event.pull_request.number }} --compatibility-date 2024-01-01

    - name: Comment on PR
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
      with:
        script: |
          const prNumber = context.payload.pull_request.number;
          const deploymentUrl = `https://work-rs-preview-${prNumber}.${process.env.CF_ACCOUNT_SUBDOMAIN || 'workers'}.dev`;

          const comment = `## ðŸš€ Preview Deployment

          Your preview is ready at: ${deploymentUrl}

          **Note**: This preview uses separate Durable Objects from production.`;

          // Find and update existing comment or create new one
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber
          });

          const botComment = comments.find(comment =>
            comment.user.type === 'Bot' && comment.body.includes('Preview Deployment')
          );

          if (botComment) {
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: botComment.id,
              body: comment
            });
          } else {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: comment
            });
          }
      env:
        CF_ACCOUNT_SUBDOMAIN: ${{ secrets.CF_ACCOUNT_SUBDOMAIN }}
